
path = ""
morph = readDiscreteCharacterData(path + "Dia-IE_Narrow_Definite_Indefinite_Merged_Multistate.nex")

nSites <- morph.nchar()

moves = VectorMoves()
monitors = VectorMonitors()

trees = readTrees(path + "Dia-ieo_fifty.nex", treetype="clock")


treetrace = treeTrace(trees)
psi ~ dnEmpiricalTree(treetrace)
moves.append( mvEmpiricalTree(psi, weight=2) )


#This is the Chang A3 MAP tree
map_tree = readBranchLengthTrees(path + "Dia-ChangA3.tree")[1]

n_slow ~ dnUniform(0,9)
moves.append( mvSlide(n_slow, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_slow, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_slow, delta=0.01, tune=true, weight=2.0) )


n_fast ~ dnUniform(9, 18)

moves.append( mvSlide(n_fast, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_fast, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_fast, delta=0.01, tune=true, weight=2.0) )

rate_pr_slow := psi.treeLength() / n_slow
rate_pr_fast := psi.treeLength() / n_fast



#Gain of indefinite article with no definiteness marker
rate_00_01 ~ dnExponential(rate_pr_slow)

#Gain of definite article with no indefinite article
rate_00_10 ~ dnExponential(rate_pr_fast)

#Gain of definite article with indefinite article
rate_01_11 ~ dnExponential(rate_pr_slow)

#Gain of indefinite article with definiteness marker
rate_10_11 ~ dnExponential(rate_pr_fast)



#Gain
moves.append( mvScale( rate_00_01, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.01, tune=true, weight=2 ) )




rates := [ [ 0.0, rate_00_10 , rate_00_01 , 0.0 ],
           [ 0.0 , 0.0, 0.0, rate_10_11  ],
           [ 0.0 , 0.0, 0.0, rate_01_11  ], 
           [ 0.0, 0.0 , 0.0 , 0.0 ] ]

Q := fnFreeK( rates , rescaled=FALSE ) 

rf <- [1.0, 0.0, 0.0, 0]

phyMorph ~ dnPhyloCTMC(tree=psi, Q=Q, rootFrequencies=rf, type="Standard", nSites=1)

phyMorph.clamp(morph)


mymodel = model ( Q )


monitors.append( mnModel(filename="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.log", printgen=100) )

monitors.append( mnScreen(printgen=100) )


monitors.append( mnFile( filename="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.trees", printgen=100, psi ) ) 


monitors.append( mnJointConditionalAncestralState(tree=psi, ctmc=phyMorph, filename="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.states", type="Standard", printgen=100, withStartStates=FALSE) ) 


monitors.append( mnStochasticCharacterMap(ctmc=phyMorph, filename="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.maps", printgen=100) )


mymcmc = mcmc(mymodel, monitors, moves, nruns=6, combine="mixed")

#Comment this out when you restart from checkpoint
mymcmc.burnin(generations=10000,tuningInterval=200)

#Comment this out for the first run  
#mymcmc.initializeFromCheckpoint("output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.state") 


mymcmc.run(generations=1000000, checkpointInterval=1000, checkpointFile="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet.state")


mymcmc.operatorSummary()
