clear()
path = ""
morph = readDiscreteCharacterData(path + "Dia-IE_Narrow_Definite_Indefinite_Merged_Multistate.nex")



nSites <- morph.nchar()


moves = VectorMoves()
monitors = VectorMonitors()

trees = readTrees(path + "Dia-ieo_fifty.nex", treetype="non-clock")



treetrace = treeTrace(trees)
psi ~ dnEmpiricalTree(treetrace)
moves.append( mvEmpiricalTree(psi, weight=2) )

#This is the Chang A3 MAP tree
map_tree <- readBranchLengthTrees(path + "Dia-ChangA3.tree")[1]


n_indef1 ~ dnUniform(7,11)

moves.append( mvSlide(n_indef1, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_indef1, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_indef1, delta=0.01, tune=true, weight=2.0) )

n_indef2 ~ dnUniform(3,7)

moves.append( mvSlide(n_indef2, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_indef2, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_indef2, delta=0.01, tune=true, weight=2.0) )

rate_pr_10_11 := psi.treeLength() / n_indef1 
rate_pr_00_01 := psi.treeLength() / n_indef2

rate_pr_def := psi.treeLength() / 18


rate_00_01 ~ dnExponential(rate_pr_00_01)

rate_10_11 ~ dnExponential(rate_pr_10_11)

rate_def ~ dnExponential(rate_pr_def)




#Gain
moves.append( mvScale( rate_00_01, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_def, lambda=1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_def, lambda=0.1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_def, lambda=0.01, tune=true, weight=2 ) )



rates := [ [ 0.0, rate_def , rate_00_01 , 0.0 ],
           [ 0.0 , 0.0, 0.0, rate_10_11  ],
           [ 0.0 , 0.0, 0.0, rate_def  ], 
           [ 0.0, 0.0 , 0.0 , 0.0 ] ]

Q := fnFreeK( rates , rescaled=FALSE ) 



rf <- [1.0, 0.0, 0.0, 0.0]



phyMorph ~ dnPhyloCTMC(tree=psi, Q=Q, rootFrequencies=rf, type="Standard", nSites=1) 


phyMorph.clamp(morph)




mymodel = model ( Q )


####################################
# Run the power-posterior analysis #
####################################
pow_p = powerPosterior(mymodel, moves, monitors, "output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamDef_powp.out", cats=127, sampleFreq=10)
pow_p.burnin(generations=2000,tuningInterval=200)
pow_p.run(generations=10000)
###################################
# Run the stepping-stone analysis #
###################################
ss = steppingStoneSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamDef_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Stepping stone marginal likelihood:\t", ss.marginal() )
ps = pathSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamDef_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Path-sampling marginal likelihood:\t", ps.marginal() )

