clear()
path = ""
morph = readDiscreteCharacterData(path + "Dia-IE_Narrow_Definite_Indefinite_Merged_Multistate.nex")


nSites <- morph.nchar()

moves = VectorMoves()
monitors = VectorMonitors()

trees = readTrees(path + "Dia-ieo_fifty.nex", treetype="non-clock")




treetrace = treeTrace(trees)
psi ~ dnEmpiricalTree(treetrace)
moves.append( mvEmpiricalTree(psi, weight=2) )

#This is the Chang A3 MAP tree
map_tree <- readBranchLengthTrees(path + "Dia-ChangA3.tree")[1]

n_slow ~ dnUniform(0,9)
moves.append( mvSlide(n_slow, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_slow, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_slow, delta=0.01, tune=true, weight=2.0) )


n_fast ~ dnUniform(9, 18)

moves.append( mvSlide(n_fast, delta=1.0, tune=true, weight=2.0) )
moves.append( mvSlide(n_fast, delta=0.1, tune=true, weight=2.0) )
moves.append( mvSlide(n_fast, delta=0.01, tune=true, weight=2.0) )

rate_pr_slow := psi.treeLength() / n_slow
rate_pr_fast := psi.treeLength() / n_fast

#Gain of indefinite article with no definiteness marker
rate_00_01 ~ dnExponential(rate_pr_slow)

#Gain of definite article with no indefinite article
rate_00_10 ~ dnExponential(rate_pr_fast)

#Gain of definite article with indefinite article
rate_01_11 ~ dnExponential(rate_pr_slow)

#Gain of indefinite article with definiteness marker
rate_10_11 ~ dnExponential(rate_pr_fast)



#Gain
moves.append( mvScale( rate_00_01, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_01, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_00_10, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_10_11, lambda=0.01, tune=true, weight=2 ) )



rates := [ [ 0.0, rate_00_10 , rate_00_01 , 0.0 ],
           [ 0.0 , 0.0, 0.0, rate_10_11  ],
           [ 0.0 , 0.0, 0.0, rate_01_11  ], 
           [ 0.0, 0.0 , 0.0 , 0.0 ] ]

Q := fnFreeK( rates , rescaled=false ) 



rf <- [1.0, 0.0, 0.0, 0.0]



phyMorph ~ dnPhyloCTMC(tree=psi, Q=Q, rootFrequencies=rf, type="Standard", nSites=1) 


phyMorph.clamp(morph)


mymodel = model ( Q )


####################################
# Run the power-posterior analysis #
####################################
pow_p = powerPosterior(mymodel, moves, monitors, "output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet_powp.out", cats=127, sampleFreq=10)
pow_p.burnin(generations=100,tuningInterval=200)
pow_p.run(generations=1000)
###################################
# Run the stepping-stone analysis #
###################################
ss = steppingStoneSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Stepping stone marginal likelihood:\t", ss.marginal() )
ps = pathSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Gain_TreeSet_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Path-sampling marginal likelihood:\t", ps.marginal() )

