clear()

path = ""

morph = readDiscreteCharacterData(path + "Dia-IE_Narrow_Pragmatic_Semantic_Definite.nex")



nSites <- morph.nchar()

moves = VectorMoves()
monitors = VectorMonitors()

trees = readBranchLengthTrees(path + "Dia-ieo_fifty.nex")





treetrace = treeTrace(trees)

psi ~ dnEmpiricalTree(treetrace)
moves.append( mvEmpiricalTree(psi, weight=2) )


#This is the Chang A3 MAP tree
map_tree <- readBranchLengthTrees(path + "Dia-ChangA3.tree")[1]



rate_pr_pragmatic := psi.treeLength() / 22
rate_pr_semantic := psi.treeLength() / 18


#Gain of indefinite article with no definiteness marker
rate_sem ~ dnExponential(rate_pr_semantic)
#Gain of definiteness marker with no indefinite article
rate_00_10 ~ dnExponential(rate_pr_pragmatic)
#Gain of definiteness marker with indefinite article
rate_01_11 ~ dnExponential(rate_pr_pragmatic)


#Gain

moves.append( mvScale( rate_00_10, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=1, tune=true, weight=2 ) )
moves.append( mvScale( rate_sem, lambda=1, tune=true, weight=2 ) )

moves.append( mvScale( rate_00_10, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.1, tune=true, weight=2 ) )
moves.append( mvScale( rate_sem, lambda=0.1, tune=true, weight=2 ) )


moves.append( mvScale( rate_00_10, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_01_11, lambda=0.01, tune=true, weight=2 ) )
moves.append( mvScale( rate_sem, lambda=0.01, tune=true, weight=2 ) )

rates := [ [ 0.0, rate_00_10 , rate_sem , 0.0 ],
           [ 0.0 , 0.0, 0.0, rate_sem  ],
           [ 0.0 , 0.0, 0.0, rate_01_11  ], 
           [ 0.0, 0.0 , 0.0 , 0.0 ] ]

Q := fnFreeK( rates , rescaled=FALSE ) 


rf <- [1.0, 0.0, 0.0, 0.0]


phyMorph ~ dnPhyloCTMC(tree=psi, Q=Q, rootFrequencies=rf, type="Standard", nSites=1) 

phyMorph.clamp(morph)

mymodel = model ( Q )


####################################
# Run the power-posterior analysis #
####################################
pow_p = powerPosterior(mymodel, moves, monitors, "output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamIndef_powp.out", cats=127, sampleFreq=10)
pow_p.burnin(generations=2000,tuningInterval=200)
pow_p.run(generations=10000)
###################################
# Run the stepping-stone analysis #
###################################
ss = steppingStoneSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamIndef_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Stepping stone marginal likelihood:\t", ss.marginal() )
ps = pathSampler(file="output/Corr_Narrow_Bin_Dependent_RF_Pi_Gain_TreeSet_3ParamIndef_powp.out", powerColumnName="power", likelihoodColumnName="likelihood")
write("Path-sampling marginal likelihood:\t", ps.marginal() )

